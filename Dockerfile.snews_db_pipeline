FROM python:3.11-bullseye

# Set working directory
WORKDIR /app

# Accept build arguments
ARG HOP_USERNAME
ARG HOP_PASSWORD
ARG POSTGRES_USER
ARG POSTGRES_PASSWORD
ARG POSTGRES_DB

# Set environment variables
ENV HOP_USERNAME=${HOP_USERNAME}
ENV HOP_PASSWORD=${HOP_PASSWORD}
ENV POSTGRES_USER=${POSTGRES_USER}
ENV POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
ENV POSTGRES_DB=${POSTGRES_DB}

COPY . /app
SHELL ["/bin/bash", "-c"]
RUN apt-get update && apt-get install -y --no-install-recommends git build-essential libpq-dev && rm -rf /var/lib/apt/lists/*


RUN sed -i 's/^FIREDRILL_OBSERVATION_TOPIC=.*/FIREDRILL_OBSERVATION_TOPIC="kafka:\/\/$\{HOP_BROKER\}\/snews\.experiments-github"/' /app/snews_db/tests/etc/test-config.env
RUN sed -i 's|^DATABASE_URL=.*|DATABASE_URL="postgresql://user:password@snews_pg:5432/snews_pg"|' /app/snews_db/tests/etc/test-config.env


# Copy credentials into the container
COPY generate_firedrill_creds.sh /app/generate_firedrill_creds.sh
RUN chmod +x /app/generate_firedrill_creds.sh
RUN /app/generate_firedrill_creds.sh


# Install Poetry
RUN pip install --no-cache-dir poetry

# Install dependencies using Poetry
RUN poetry lock
RUN poetry install

## Add hop credentials
RUN poetry run hop auth add hop_creds.csv

## Command to run the coincidence system
CMD ["poetry", "run", "snews_db", "--env", "/app/snews_db/tests/etc/test-config.env", "listen-to-detectors", "--firedrill"]
